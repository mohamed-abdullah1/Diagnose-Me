project=$1
dotnet new sln -o $project

cd $project
dotnet new webapi -o $project.Api
dotnet new classlib -o $project.Application
dotnet new classlib -o $project.Infrastructure
dotnet new classlib -o $project.Persistence 
dotnet new classlib -o $project.Domain
dotnet new classlib -o $project.Contracts

rm */Class1.cs  
rm $project.Api/Controllers/W*
rm $project.Api/Wea*

for i in $(ls -d *);	
	do
		dotnet sln add $i/$i.csproj
		touch $i/DependencyInjection.cs
	done
cp ../Auth/.gitignore .
dotnet add $project.Api reference $project.Application $project.Infrastructure $project.Persistence $project.Contracts

dotnet add $project.Application reference $project.Domain
dotnet add $project.Infrastructure reference $project.Application
dotnet add $project.Persistence reference $project.Application

dotnet add $project.Persistence package Microsoft.EntityFrameworkCore --version 7.0.2
dotnet add $project.Persistence package Microsoft.EntityFrameworkCore.Relational --version 7.0.2
dotnet add $project.Persistence package Pomelo.EntityFrameworkCore.MySql --version 7.0.2
dotnet add $project.Persistence package Microsoft.Extensions.DependencyInjection.Abstractions
dotnet add $project.Persistence package Microsoft.Extensions.Configuration
dotnet add $project.Persistence package Microsoft.Extensions.Options.ConfigurationExtensions

dotnet add $project.Api package Microsoft.EntityFrameworkCore.Design --version 7.0.2
dotnet add $project.Api package Swashbuckle.AspNetCore
dotnet add $project.Api package Mapster
dotnet add $project.Api package ErrorOr
dotnet add $project.Api package Mapster.DependencyInjection



mkdir $project.Domain/Entities
mkdir -p $project.Persistence/Context/Configrations
mkdir $project.Persistence/Repositories 
mkdir $project.Docs
